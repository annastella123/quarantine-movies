{"ast":null,"code":"var _jsxFileName = \"/Users/annanorte/Desktop/group7_project-final/src/components/Navbar.js\";\nimport React, { Component } from 'react';\nimport NavLinks from \"./NavLinks\";\nimport { connect } from \"react-redux\";\nimport { logout, resetCheckbox, resetClick, fetchStarted, toggleFetch, leaveRoom } from \"../redux/actions\";\nimport { Container, Row, Spinner } from \"reactstrap\";\nimport PopularityMovieSearch from \"../components/PopularityMovieSearch\";\nimport { toggleBoarding } from '../redux/actions';\nimport Login from '../components/Login';\nimport SignUp from '../components/SignUp';\nimport Watchlist from '../components/Watchlist';\nimport Display from './Display';\nimport Search from './Search';\nimport OnboardingSlides from './OnboardingHelp';\nimport \"../styles/styles.css\";\n\nconst mapStateToProps = state => {\n  const currentUser = state.userReducer.currentUser;\n  const username = state.userReducer.username;\n  return {\n    currentUser,\n    username\n  };\n};\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1\n    };\n    this.selectPage = this.selectPage.bind(this);\n    this.getCurrentPage = this.getCurrentPage.bind(this);\n  }\n\n  selectPage(page) {\n    if (Number(page) === 7) {\n      this.props.fetchStarted();\n      setTimeout(() => {\n        this.props.logout();\n        this.props.resetCheckbox();\n        this.props.resetClick();\n        this.props.toggleFetch();\n        this.props.leaveRoom('live support', this.props.username);\n      }, 1000);\n    }\n\n    if (Number(page) === 8) {\n      this.props.toggleBoarding();\n    }\n\n    this.setState({\n      currentPage: Number(page)\n    });\n  }\n\n  getCurrentPage() {\n    switch (this.state.currentPage) {\n      case 2:\n        return React.createElement(Search, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n\n      case 3:\n        return React.createElement(PopularityMovieSearch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        });\n\n      case 4:\n        return React.createElement(SignUp, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n\n      case 5:\n        return React.createElement(Login, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n\n      case 6:\n        return React.createElement(Watchlist, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n\n      case 8:\n        return React.createElement(OnboardingSlides, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(Search, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(NavLinks, {\n      currentPage: this.state.currentPage,\n      selectPage: this.selectPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Display, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.getCurrentPage()), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  logout,\n  toggleBoarding,\n  fetchStarted,\n  toggleFetch,\n  resetCheckbox,\n  resetClick,\n  leaveRoom\n})(Navbar);","map":{"version":3,"sources":["/Users/annanorte/Desktop/group7_project-final/src/components/Navbar.js"],"names":["React","Component","NavLinks","connect","logout","resetCheckbox","resetClick","fetchStarted","toggleFetch","leaveRoom","Container","Row","Spinner","PopularityMovieSearch","toggleBoarding","Login","SignUp","Watchlist","Display","Search","OnboardingSlides","mapStateToProps","state","currentUser","userReducer","username","Navbar","constructor","props","currentPage","selectPage","bind","getCurrentPage","page","Number","setTimeout","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport NavLinks from \"./NavLinks\"\nimport {connect} from \"react-redux\";\nimport { logout, resetCheckbox, resetClick, fetchStarted, toggleFetch, leaveRoom } from \"../redux/actions\";\nimport {Container, Row, Spinner} from \"reactstrap\";\nimport PopularityMovieSearch from \"../components/PopularityMovieSearch\";\nimport { toggleBoarding } from '../redux/actions';\nimport Login from '../components/Login';\nimport SignUp from '../components/SignUp';\nimport Watchlist from '../components/Watchlist';\nimport Display from './Display';\nimport Search from './Search';\nimport OnboardingSlides from './OnboardingHelp';\nimport \"../styles/styles.css\"\n\nconst mapStateToProps = state => {\n  const currentUser = state.userReducer.currentUser;\n  const username = state.userReducer.username\n  return { currentUser, username}\n}\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            currentPage: 1\n        }\n    \n        this.selectPage = this.selectPage.bind(this)\n        this.getCurrentPage = this.getCurrentPage.bind(this)\n    \n      } \n\n      selectPage(page){\n        if(Number(page) === 7){\n            this.props.fetchStarted()\n            setTimeout(()=>{\n                this.props.logout()\n                this.props.resetCheckbox()\n                this.props.resetClick()\n                this.props.toggleFetch()\n                this.props.leaveRoom('live support', this.props.username)\n            }, 1000)\n            \n            \n        }\n        if(Number(page) === 8){\n            this.props.toggleBoarding()\n        }\n        this.setState({\n            currentPage: Number(page)\n        })\n    \n      }\n    \n      getCurrentPage(){\n        switch (this.state.currentPage){\n            case 2:\n                return <Search/>\n            case 3:\n                return <PopularityMovieSearch/>\n            case 4:\n                return < SignUp/>\n            case 5:\n                return <Login/>\n            case 6:\n                return <Watchlist/>\n            case 8:\n                return <OnboardingSlides/>\n            default:\n                return <Search/>\n        }\n      }\n    \n    render() {\n        return (\n            <div>\n                <NavLinks currentPage={this.state.currentPage} selectPage={this.selectPage}/>\n                <Display>{this.getCurrentPage()}</Display>\n                <Row><br/><br/><br/></Row>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, {logout, toggleBoarding, fetchStarted, toggleFetch, resetCheckbox, resetClick, leaveRoom})(Navbar);"]},"metadata":{},"sourceType":"module"}