{"ast":null,"code":"var _jsxFileName = \"/Users/annanorte/Desktop/group7_project-final/src/components/Login.js\";\nimport React, { Component, Fragment } from 'react';\nimport { FormGroup, Label, Input, Button, Row, Col, Alert, Container, Spinner } from \"reactstrap\";\nimport { validateLogin } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\nimport { LOGIN_STATUS } from \"../constants\";\nimport \"../styles/styles.css\";\n\nconst mapStateToProps = state => {\n  const status = state.loginReducer.status;\n  const isFetching = state.fetchFlag.isFetching;\n  return {\n    status,\n    isFetching\n  };\n};\n\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      invalid: false\n    };\n    this.usernameAndPassword = this.usernameAndPassword.bind(this);\n    this.login = this.login.bind(this);\n  }\n\n  usernameAndPassword(e) {\n    this.setState({\n      [e.target.id]: e.target.value,\n      invalid: false\n    });\n  }\n\n  login() {\n    this.props.validateLogin(this.state.username, this.state.password);\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.isFetching ? React.createElement(Alert, {\n      color: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Process Login\")))) : \"\", this.props.status === LOGIN_STATUS.INVALID || this.props.status === LOGIN_STATUS.ERROR ? React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.status === LOGIN_STATUS.INVALID ? \"Invalid username or password.\" : \"\", this.props.status === LOGIN_STATUS.ERROR ? \"Database error.\" : \"\") : \"\", React.createElement(Container, {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" Username: \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"text\",\n      id: \"username\",\n      value: this.state.username,\n      onChange: this.usernameAndPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" Password: \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"password\",\n      id: \"password\",\n      value: this.state.password,\n      onChange: this.usernameAndPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"login-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\nexport default connect(mapStateToProps, {\n  validateLogin\n})(Login);","map":{"version":3,"sources":["/Users/annanorte/Desktop/group7_project-final/src/components/Login.js"],"names":["React","Component","Fragment","FormGroup","Label","Input","Button","Row","Col","Alert","Container","Spinner","validateLogin","connect","LOGIN_STATUS","mapStateToProps","state","status","loginReducer","isFetching","fetchFlag","Login","constructor","props","username","password","invalid","usernameAndPassword","bind","login","e","setState","target","id","value","render","INVALID","ERROR"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport {FormGroup, Label, Input, Button, Row, Col, Alert, Container, Spinner} from \"reactstrap\";\nimport { validateLogin } from \"../redux/actions\"\nimport {connect} from \"react-redux\";\nimport {LOGIN_STATUS} from \"../constants\";\nimport \"../styles/styles.css\"\n\nconst mapStateToProps = (state) => {\n    const status = state.loginReducer.status;\n    const isFetching = state.fetchFlag.isFetching\n    return {status, isFetching}\n}\nexport class Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            invalid: false\n        }\n\n        this.usernameAndPassword = this.usernameAndPassword.bind(this);\n        this.login = this.login.bind(this);\n    }\n\n    usernameAndPassword(e) {\n        this.setState({\n            [e.target.id]: e.target.value,\n            invalid: false\n        })\n    }\n\n    login() {\n        this.props.validateLogin(this.state.username, this.state.password)\n    }\n\n    render() {\n        return (\n            <Fragment className=\"body\">\n                 {\n                    this.props.isFetching ?\n                    <Alert color=\"info\">\n                        <Row>\n                        <Col xs=\"auto\"><Spinner color=\"primary\" /></Col>\n                        <Col><p>Process Login</p></Col>\n                        </Row>\n                    </Alert>\n                    :\"\"\n                }\n                {\n                    this.props.status === LOGIN_STATUS.INVALID || this.props.status === LOGIN_STATUS.ERROR ?\n                        <Alert color=\"danger\">\n                            {this.props.status === LOGIN_STATUS.INVALID ? \"Invalid username or password.\" : \"\"}\n                            {this.props.status === LOGIN_STATUS.ERROR ? \"Database error.\" : \"\"}\n                        </Alert> : \"\"\n                }\n                <Container className=\"login\">\n                    <FormGroup>\n                        <Col>\n                        <br/><Label for=\"username\"> Username: </Label><br/>\n                        <Input type=\"text\" id=\"username\" value={this.state.username} onChange={this.usernameAndPassword} />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup>\n                        <Col>\n                        <br/><Label for=\"password\"> Password: </Label><br/>\n                        <Input type=\"password\" id=\"password\" value={this.state.password} onChange={this.usernameAndPassword} />\n                        </Col>\n                    </FormGroup>\n                    <Row>\n                        <Col className=\"login-button\">\n                            <br/><Button color=\"primary\" onClick={this.login}>Submit</Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </Fragment>\n\n        )\n    }\n}\n\nexport default connect(mapStateToProps, {validateLogin}) (Login);\n"]},"metadata":{},"sourceType":"module"}