{"ast":null,"code":"var _jsxFileName = \"/Users/annanorte/Documents/CS7580/git_personal_final/quarantine-movies/src/components/PopularityMovieSearch.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Movie from './Movie';\nimport MoviePage from './MoviePage';\nimport { getMoviesByRating } from \"../redux/selectors\";\nimport { Jumbotron, Button, Tooltip, Container, Row, Col, Alert, Spinner } from \"reactstrap\";\nimport { toggleClick } from \"../redux/actions\";\nimport \"../styles/styles.css\";\n\nclass PopularityJobSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickHandler = () => {\n      this.setState(state => ({\n        tooltipOpen: !state.tooltipOpen\n      }));\n    };\n\n    this.state = {\n      tooltipOpen: false,\n      expand: false,\n      movie: \"\"\n    };\n    this.movieView = this.movieView.bind(this);\n    this.movieList = this.movieList.bind(this);\n  }\n\n  movieView(e) {\n    this.setState({\n      expand: true,\n      movie: e\n    });\n  }\n\n  movieList() {\n    this.setState({\n      expand: false\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      tooltipOpen: true\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Sorted Movies\"), this.state.expand === false ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      id: \"hit\",\n      className: \"mx-auto\",\n      onClick: () => {\n        this.props.toggleClick();\n        this.onClickHandler();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Sort by Rating\"), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.props.click ? this.props.movies.map((movie, index) => {\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"link\",\n        id: movie.title,\n        value: movie.title,\n        onClick: () => this.movieView(movie.title),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Movie, {\n        key: `todo-${index}`,\n        id: `todo-${index}`,\n        movie: movie,\n        showOnboarding: this.props.completed === 0 && index === 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })));\n    }) : \"Search result empty\")) : React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.click ? this.props.movies.map((movie, index) => {\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"link\",\n        id: movie.title,\n        value: movie.title,\n        onClick: () => this.movieView(movie.title),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Movie, {\n        key: `todo-${index}`,\n        id: `todo-${index}`,\n        movie: movie,\n        showOnboarding: this.props.completed === 0 && index === 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })));\n    }) : \"Search result empty\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(MoviePage, {\n      movie: this.state.movie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    click\n  } = state;\n  const movies = getMoviesByRating(state);\n  const isFetching = state.fetchFlag.isFetching;\n  return {\n    movies,\n    click,\n    isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleClick\n})(PopularityJobSearch);","map":{"version":3,"sources":["/Users/annanorte/Documents/CS7580/git_personal_final/quarantine-movies/src/components/PopularityMovieSearch.js"],"names":["React","Component","Fragment","connect","Movie","MoviePage","getMoviesByRating","Jumbotron","Button","Tooltip","Container","Row","Col","Alert","Spinner","toggleClick","PopularityJobSearch","constructor","props","onClickHandler","setState","state","tooltipOpen","expand","movie","movieView","bind","movieList","e","componentDidMount","render","click","movies","map","index","title","completed","mapStateToProps","isFetching","fetchFlag"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from \"react\";\nimport { connect } from \"react-redux\";\nimport Movie from './Movie'\nimport MoviePage from './MoviePage'\nimport {getMoviesByRating} from \"../redux/selectors\";\nimport {Jumbotron, Button, Tooltip, Container, Row, Col, Alert, Spinner} from \"reactstrap\";\nimport {toggleClick} from \"../redux/actions\";\nimport \"../styles/styles.css\"\n\nclass PopularityJobSearch extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          tooltipOpen: false,\n          expand: false,\n          movie: \"\"\n    }\n    this.movieView = this.movieView.bind(this);\n    this.movieList = this.movieList.bind(this);\n}\n\nmovieView(e) {\n  this.setState({\n      expand: true,\n      movie: e\n  })\n}\n\nmovieList() {\n  this.setState({\n      expand: false\n  })\n}\n\nonClickHandler =() => {\n    this.setState(state => ({\n        tooltipOpen: !state.tooltipOpen\n      }));\n}\ncomponentDidMount() {\n  this.setState({\n    tooltipOpen: true\n  })\n}\n\n render(){\n\n   return (\n    <Fragment>\n      {\n          // this.props.isFetching ?\n          // <Alert color=\"info\">\n          //   <Row>\n          //     <Col xs=\"auto\"><Spinner color=\"primary\" /></Col>\n          //     <Col><p>Fetching Movies</p></Col>\n          //   </Row>\n          // </Alert>\n          // :\"\"\n        }\n      <h1>Sorted Movies</h1>\n        {this.state.expand === false ? \n        <Container>\n        <Button color=\"primary\" id=\"hit\" className=\"mx-auto\" onClick={()=>{this.props.toggleClick(); this.onClickHandler()}}>Sort by Rating</Button>\n        <Jumbotron>\n        {this.props.click\n            ? this.props.movies.map((movie, index) => {\n            return <Row><br/><Button color=\"link\" id={movie.title} value={movie.title} onClick={() => this.movieView(movie.title)}><Movie key={`todo-${index}`} id={`todo-${index}`} movie={movie} showOnboarding={this.props.completed === 0 && index === 0} /></Button><Row><br/></Row></Row>\n            })\n            : \"Search result empty\"}\n        </Jumbotron></Container>\n        : \n        <Container>\n              <Row>\n                <Col>\n                <Jumbotron>\n                {this.props.click\n                ? this.props.movies.map((movie, index) => {\n                return <Row><br/><Button color=\"link\" id={movie.title} value={movie.title} onClick={() => this.movieView(movie.title)}><Movie key={`todo-${index}`} id={`todo-${index}`} movie={movie} showOnboarding={this.props.completed === 0 && index === 0} /></Button><Row><br/></Row></Row>\n                })\n                : \"Search result empty\"}\n                </Jumbotron>\n                </Col>\n                <Col><MoviePage movie={this.state.movie}/></Col>\n              </Row> \n          </Container>}\n            \n     </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const {click} = state\n  const movies = getMoviesByRating(state)\n  const isFetching = state.fetchFlag.isFetching\n  return {movies, click, isFetching};\n}\n\nexport default connect(mapStateToProps, {toggleClick} )(PopularityJobSearch);\n"]},"metadata":{},"sourceType":"module"}