{"ast":null,"code":"var _jsxFileName = \"/Users/annanorte/Documents/CS7580/git_personal_final/quarantine-movies/src/components/Form.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { FormGroup, Input, Label, Button, Container, Alert } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { sendToServer, joinRoom, toggleRoom, updateCustomers, leaveRoom } from \"../redux/actions\";\nimport \"../styles/styles.css\";\n\nconst mapStateToProps = state => {\n  const showRoom = state.chatRoom.showRoom;\n  const customers = state.chatRoom.customers;\n  const showSupport = state.chatRoom.showSupport;\n  const username = state.userReducer.username;\n  return {\n    showRoom,\n    showSupport,\n    customers,\n    username\n  };\n};\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.roomHandler = () => {\n      this.props.joinRoom('live support', this.props.username);\n    };\n\n    this.resetMsg = () => {\n      this.setState({\n        messageTxt: \"\"\n      });\n    };\n\n    this.sendMessage = () => {\n      this.props.sendToServer(this.state.messageTxt, this.props.username);\n      this.setState({\n        messageTxt: \"\"\n      });\n    };\n\n    this.state = {\n      messageTxt: \"\",\n      name: \"admin\"\n    };\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.sendToServer(\"!@#\", this.props.username);\n    this.props.joinRoom('waiting room', this.props.username);\n    this.props.updateCustomers(\"dummy\");\n  }\n\n  handleInput(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.username === 'admin' && this.props.customers.length === 0 && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"waiting for customer to join\"), !this.props.customers.includes(this.props.username) && this.props.customers.includes('admin') && this.props.customers.length === 1 && this.props.username !== 'admin' && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"room is available\"), !this.props.customers.includes(this.props.username) && this.props.customers.length === 2 && this.props.username !== 'admin' && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"agent is busy with another customer\"), this.props.customers.includes(this.props.username) && this.props.customers.includes('admin') && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"messageTxt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Your message:\"), React.createElement(Input, {\n      id: \"messageTxt\",\n      type: \"textarea\" // placeholder=\"Enter your message\"\n      ,\n      value: this.state.messageTxt,\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"float-right\",\n      onClick: () => this.props.leaveRoom('live support', this.props.username),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"leave room\"), React.createElement(Button, {\n      className: \"float-right\",\n      onClick: this.sendMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Send\")), !this.props.customers.includes('admin') && this.props.customers.length === 1 && this.props.customers.includes(this.props.username) && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"waiting for agent\"), this.props.username === 'admin' && this.props.customers.includes('admin') && this.props.customers.length === 1 && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"A customer left the chat\"), !this.props.showRoom && this.props.username !== \"admin\" && React.createElement(Button, {\n      className: \"float-right\",\n      onClick: () => this.roomHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"join room\"), this.props.showSupport && !this.props.customers.includes('admin') && this.props.username === 'admin' && React.createElement(Button, {\n      className: \"float-right\",\n      onClick: () => this.roomHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"hit this button to help customer\"));\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  sendToServer,\n  joinRoom,\n  toggleRoom,\n  updateCustomers,\n  leaveRoom\n})(Form);","map":{"version":3,"sources":["/Users/annanorte/Documents/CS7580/git_personal_final/quarantine-movies/src/components/Form.js"],"names":["React","Component","Fragment","FormGroup","Input","Label","Button","Container","Alert","connect","sendToServer","joinRoom","toggleRoom","updateCustomers","leaveRoom","mapStateToProps","state","showRoom","chatRoom","customers","showSupport","username","userReducer","Form","constructor","props","roomHandler","resetMsg","setState","messageTxt","sendMessage","name","handleInput","bind","componentDidMount","event","target","id","value","render","length","includes"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from \"react\";\nimport {FormGroup, Input, Label, Button, Container, Alert} from \"reactstrap\";\nimport {connect} from \"react-redux\";\nimport {sendToServer, joinRoom, toggleRoom, updateCustomers, leaveRoom} from \"../redux/actions\";\nimport \"../styles/styles.css\"\n\nconst mapStateToProps = state => {\n    const showRoom = state.chatRoom.showRoom\n    const customers = state.chatRoom.customers\n    const showSupport = state.chatRoom.showSupport\n    const username = state.userReducer.username\n    return {showRoom, showSupport, customers, username}\n}\n\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            messageTxt: \"\",\n            name:\"admin\",\n          }\n      \n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.sendToServer(\"!@#\", this.props.username);\n        this.props.joinRoom('waiting room', this.props.username);\n        this.props.updateCustomers(\"dummy\");\n    }\n    \n    handleInput(event) {\n        this.setState({[event.target.id]:event.target.value});\n    }\n\n    roomHandler = ()=> {\n        this.props.joinRoom('live support',this.props.username);\n    }\n    resetMsg = () => {\n        this.setState({\n            messageTxt: \"\"\n        })\n    }\n    sendMessage = () =>{\n        this.props.sendToServer(this.state.messageTxt, this.props.username);\n        this.setState({\n            messageTxt: \"\"\n        })\n\n    }\n    \n    render() {\n        return (\n            <Fragment>\n                {(this.props.username === 'admin' && this.props.customers.length === 0)&&\n                    <Alert color=\"danger\">\n                        waiting for customer to join\n                    </Alert>\n                }\n                {(!this.props.customers.includes(this.props.username) && this.props.customers.includes('admin') && this.props.customers.length === 1 && this.props.username !== 'admin')&&\n                    <Alert color=\"danger\">\n                        room is available\n                    </Alert>\n                }   \n                {(!this.props.customers.includes(this.props.username) && this.props.customers.length === 2 && this.props.username !== 'admin')&&\n                    <Alert color=\"danger\">\n                        agent is busy with another customer\n                    </Alert>\n                }   \n                {(this.props.customers.includes(this.props.username) && this.props.customers.includes('admin')) &&\n                    <Fragment>\n                        <FormGroup>\n                            <Label for=\"messageTxt\">Your message:</Label>\n                            <Input id=\"messageTxt\" type=\"textarea\" \n                                // placeholder=\"Enter your message\"\n                                value = {this.state.messageTxt}\n                                onChange={this.handleInput}></Input>\n                        </FormGroup>\n\n                        <Button\n                                className=\"float-right\" \n                                onClick={()=>this.props.leaveRoom('live support', this.props.username)}>\n                            leave room\n                        </Button>\n                        <Button className=\"float-right\" \n                                onClick={this.sendMessage}>\n\n                            Send\n                        </Button>\n                    </Fragment>\n                }\n                {(!this.props.customers.includes('admin') && this.props.customers.length === 1 && this.props.customers.includes(this.props.username))&&\n                    <Alert color=\"danger\">\n                        waiting for agent\n                    </Alert>\n                }\n                {(this.props.username === 'admin' && this.props.customers.includes('admin') && this.props.customers.length === 1)&&\n                    <Alert color=\"danger\">\n                        A customer left the chat\n                    </Alert>\n                }\n                {((!this.props.showRoom) && (this.props.username !== \"admin\")) &&\n                <Button\n                        className=\"float-right\" \n                        onClick={()=>this.roomHandler()}>\n                    join room\n                </Button>\n                }\n                {(this.props.showSupport && !this.props.customers.includes('admin') && this.props.username === 'admin')&&\n                <Button\n                        className=\"float-right\" \n                        onClick={()=>this.roomHandler()}>\n                        hit this button to help customer\n                </Button>\n                }\n            </Fragment>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, {sendToServer, joinRoom, toggleRoom, updateCustomers, leaveRoom})(Form);"]},"metadata":{},"sourceType":"module"}