{"ast":null,"code":"var _jsxFileName = \"/Users/annanorte/Desktop/group7_project-final/src/components/MovieList.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport { getMoviesByCheckbox } from \"../redux/selectors\";\nimport { Jumbotron, Button, Container, Row, Col, Alert, Spinner } from \"reactstrap\";\nimport MoviePage from './MoviePage';\nimport MovieFilters from './MovieFilters';\nimport \"../styles/styles.css\";\n\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expand: false,\n      movie: \"\"\n    };\n    this.movieView = this.movieView.bind(this);\n    this.movieList = this.movieList.bind(this);\n  }\n\n  movieView(e) {\n    this.setState({\n      expand: true,\n      movie: e\n    });\n  }\n\n  movieList() {\n    this.setState({\n      expand: false\n    });\n  }\n\n  render() {\n    console.log(this.props.movies);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.expand === false ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Search Movies\"), React.createElement(MovieFilters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      className: \"jumbo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.props.movies && this.props.movies.length ? this.props.movies.map((movie, index) => {\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"link\",\n        id: movie.title,\n        value: movie.title,\n        onClick: () => this.movieView(movie.title),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Movie, {\n        key: `todo-${index}`,\n        id: `todo-${index}`,\n        movie: movie,\n        showOnboarding: this.props.completed === 0 && index === 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n    }) : \"Search result empty\")) : React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Search Movies\"), React.createElement(MovieFilters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      className: \"jumbo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.props.movies && this.props.movies.length ? this.props.movies.map((movie, index) => {\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"link\",\n        id: movie.title,\n        value: movie.title,\n        onClick: () => this.movieView(movie.title),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Movie, {\n        key: `todo-${index}`,\n        id: `todo-${index}`,\n        movie: movie,\n        showOnboarding: this.props.completed === 0 && index === 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })));\n    }) : \"Search result empty\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(MoviePage, {\n      movie: this.state.movie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    checkBoxes\n  } = state;\n  const movies = getMoviesByCheckbox(state, checkBoxes.GENRES);\n  const isFetching = state.fetchFlag.isFetching;\n  console.log(movies);\n  return {\n    movies,\n    isFetching\n  };\n};\n\nexport default connect(mapStateToProps)(MovieList);","map":{"version":3,"sources":["/Users/annanorte/Desktop/group7_project-final/src/components/MovieList.js"],"names":["React","Component","Fragment","connect","Movie","getMoviesByCheckbox","Jumbotron","Button","Container","Row","Col","Alert","Spinner","MoviePage","MovieFilters","MovieList","constructor","props","state","expand","movie","movieView","bind","movieList","e","setState","render","console","log","movies","length","map","index","title","completed","mapStateToProps","checkBoxes","GENRES","isFetching","fetchFlag"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from \"react-redux\";\nimport Movie from \"./Movie\";\nimport {getMoviesByCheckbox} from \"../redux/selectors\";\nimport {Jumbotron, Button, Container, Row, Col, Alert, Spinner} from \"reactstrap\";\nimport MoviePage from './MoviePage';\nimport MovieFilters from './MovieFilters';\nimport \"../styles/styles.css\"\n\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expand: false,\n      movie: \"\"\n    }\n    this.movieView = this.movieView.bind(this);\n    this.movieList = this.movieList.bind(this);\n  }\n\nmovieView(e) {\n  this.setState({\n      expand: true,\n      movie: e\n  })\n}\n\n\nmovieList() {\n  this.setState({\n      expand: false\n  })\n}\nrender() {\n  console.log(this.props.movies)\n  return (\n    <div>\n      {/*{*/}\n      {/*    this.props.isFetching ?*/}\n      {/*    <Alert color=\"info\">*/}\n      {/*      <Row>*/}\n      {/*        <Col xs=\"auto\"><Spinner color=\"primary\" /></Col>*/}\n      {/*        <Col><p>Fetching Movies</p></Col>*/}\n      {/*      </Row>*/}\n      {/*    </Alert>*/}\n      {/*    :\"\"*/}\n      {/*  }*/}\n      <Fragment>\n        {this.state.expand === false ? \n        <Container>\n            <h1>Search Movies</h1>\n            <MovieFilters/>\n            <Jumbotron className=\"jumbo\">\n            {this.props.movies && this.props.movies.length\n              ? this.props.movies.map((movie, index) => {\n                  return <Row><br/><Button color=\"link\" id={movie.title} value={movie.title} onClick={() => this.movieView(movie.title)}><Movie key={`todo-${index}`} id={`todo-${index}`} movie={movie} showOnboarding={this.props.completed === 0 && index === 0} /></Button><Row><br/></Row></Row>\n                })\n              : \"Search result empty\"}\n            </Jumbotron>\n        </Container> : \n          \n        <Container>\n            <Row>\n              <Col>\n              <h1>Search Movies</h1>\n              <MovieFilters/>\n              <Jumbotron className=\"jumbo\">\n              {this.props.movies && this.props.movies.length\n                ? this.props.movies.map((movie, index) => {\n                    return <Row><br/><Button color=\"link\" id={movie.title} value={movie.title} onClick={() => this.movieView(movie.title)}><Movie key={`todo-${index}`} id={`todo-${index}`} movie={movie} showOnboarding={this.props.completed === 0 && index === 0} /></Button><Row><br/></Row></Row>\n                  })\n                : \"Search result empty\"}\n              </Jumbotron>\n              </Col>\n              <Col>\n                <MoviePage movie={this.state.movie}/>\n              </Col>\n              </Row> \n          </Container>}\n      </Fragment>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const {checkBoxes} = state\n  const movies = getMoviesByCheckbox(state, checkBoxes.GENRES)\n  const isFetching = state.fetchFlag.isFetching\n  console.log(movies)\n  return {movies, isFetching};\n}\n\nexport default connect(mapStateToProps)(MovieList);\n"]},"metadata":{},"sourceType":"module"}