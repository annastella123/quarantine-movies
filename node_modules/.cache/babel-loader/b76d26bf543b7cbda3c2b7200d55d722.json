{"ast":null,"code":"var _jsxFileName = \"/Users/annanorte/Desktop/group7_project-final/src/components/Review.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Card, Container, Row, CardTitle, Col, Spinner, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport ReviewForm from './ReviewForm';\nimport { getReviews } from '../redux/actions';\nimport \"../styles/styles.css\";\n\nconst mapStateToProps = state => {\n  const reviews = state.reviewReducer.reviews;\n  const userReducer = state.userReducer;\n  const isFetching = state.fetchFlag.isFetching;\n  return {\n    reviews,\n    userReducer,\n    isFetching\n  };\n};\n\nexport class Review extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: this.props.movie\n    };\n  }\n\n  render() {\n    const ids = Object.keys(this.props.reviews);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"REVIEWS\"), ids.map(id => React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.props.reviews[id].movie === this.props.movie ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      inverse: true,\n      color: \"info\",\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.reviews[id].title.toUpperCase()), React.createElement(\"div\", {\n      className: \"review-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Author: \", this.props.reviews[id].author), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.reviews[id].review)))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))) : \"\"), this.props.reviews), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.userReducer.currentUser !== -1 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(ReviewForm, {\n      movie: this.props.movie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })) : \"\"));\n  }\n\n}\nexport default connect(mapStateToProps, {\n  getReviews\n})(Review);","map":{"version":3,"sources":["/Users/annanorte/Desktop/group7_project-final/src/components/Review.js"],"names":["React","Component","Fragment","Card","Container","Row","CardTitle","Col","Spinner","Alert","connect","ReviewForm","getReviews","mapStateToProps","state","reviews","reviewReducer","userReducer","isFetching","fetchFlag","Review","constructor","props","title","movie","render","ids","Object","keys","map","id","toUpperCase","author","review","currentUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,SAA/B,EAA0CC,GAA1C,EAA+CC,OAA/C,EAAwDC,KAAxD,QAAoE,YAApE;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,sBAAP;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,QAAMC,OAAO,GAAGD,KAAK,CAACE,aAAN,CAAoBD,OAApC;AACA,QAAME,WAAW,GAAGH,KAAK,CAACG,WAA1B;AACA,QAAMC,UAAU,GAAGJ,KAAK,CAACK,SAAN,CAAgBD,UAAnC;AACA,SAAO;AAACH,IAAAA,OAAD;AAAUE,IAAAA,WAAV;AAAuBC,IAAAA;AAAvB,GAAP;AACH,CALD;;AAOA,OAAO,MAAME,MAAN,SAAqBnB,SAArB,CAA+B;AAClCoB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKR,KAAL,GAAa;AACTS,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE;AADT,KAAb;AAGH;;AAGDC,EAAAA,MAAM,GAAG;AACL,UAAMC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKN,KAAL,CAAWP,OAAvB,CAAZ;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXJ,EAYKW,GAAG,CAACG,GAAJ,CAAQC,EAAE,IACP,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKR,KAAL,CAAWP,OAAX,CAAmBe,EAAnB,EAAuBN,KAAvB,KAAiC,KAAKF,KAAL,CAAWE,KAA5C,GAAoD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACjD,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,OAAO,MAAlB;AAAmB,MAAA,KAAK,EAAC,MAAzB;AAAgC,MAAA,GAAG,EAAEM,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKR,KAAL,CAAWP,OAAX,CAAmBe,EAAnB,EAAuBP,KAAvB,CAA6BQ,WAA7B,EAAL,CADA,EAEA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAY,KAAKT,KAAL,CAAWP,OAAX,CAAmBe,EAAnB,EAAuBE,MAAnC,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKV,KAAL,CAAWP,OAAX,CAAmBe,EAAnB,EAAuBG,MAA3B,CAFA,CAFA,CADA,CADiD,EAUjD,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CAViD,CAApD,GAWY,EAZjB,CADH,EAckB,KAAKX,KAAL,CAAWP,OAd7B,CAZL,EA2BQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKO,KAAL,CAAWL,WAAX,CAAuBiB,WAAvB,KAAuC,CAAC,CAAxC,GACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADA,EAEI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWE,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADH,GAIe,EALpB,CA3BR,CADJ;AAmCa;;AA/CiB;AAkDtC,eAAed,OAAO,CAACG,eAAD,EAAkB;AAACD,EAAAA;AAAD,CAAlB,CAAP,CAAuCQ,MAAvC,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Card, Container, Row, CardTitle, Col, Spinner, Alert} from 'reactstrap'\nimport {connect} from 'react-redux';\nimport ReviewForm from './ReviewForm';\nimport { getReviews } from '../redux/actions';\nimport \"../styles/styles.css\"\n\nconst mapStateToProps = state => {\n    const reviews = state.reviewReducer.reviews;\n    const userReducer = state.userReducer;\n    const isFetching = state.fetchFlag.isFetching;\n    return {reviews, userReducer, isFetching};\n}\n\nexport class Review extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: this.props.movie\n        }\n    }\n\n\n    render() {\n        const ids = Object.keys(this.props.reviews);\n        return (\n            <div>\n                {/* {\n                    this.props.isFetching ?\n                    <Alert color=\"info\">\n                        <Row>\n                        <Col xs=\"auto\"><Spinner color=\"primary\" /></Col>\n                        <Col><p>Process review </p></Col>\n                        </Row>\n                    </Alert>\n                    :\"\"\n                } */}\n                <h3>REVIEWS</h3>\n                {ids.map(id => (\n                    <Container>\n                        {this.props.reviews[id].movie === this.props.movie ? <Fragment>\n                            <Card body inverse color=\"info\" key={id}>\n                            <CardTitle>\n                            <h3>{this.props.reviews[id].title.toUpperCase()}</h3>\n                            <div className=\"review-content\">\n                            <p>Author: {this.props.reviews[id].author}</p>      \n                            <p>{this.props.reviews[id].review}</p> \n                            </div>\n                            </CardTitle>\n                            </Card>\n                            <Row><br/></Row>\n                        </Fragment> :\"\"}\n                    </Container>), this.props.reviews)}\n                    <div>  \n                        {this.props.userReducer.currentUser !== -1 ? \n                            <Fragment>\n                            <Row><br/></Row>\n                                <ReviewForm movie={this.props.movie}/>\n                            </Fragment>:\"\"}\n                    </div>\n            </div>);}}\n                    \n                \nexport default connect(mapStateToProps, {getReviews})(Review);"]},"metadata":{},"sourceType":"module"}